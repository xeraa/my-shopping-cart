
# Workaround exception when using H2 embedded database
#
# workaround Spring startup deadlock https://gist.github.com/cyrille-leclerc/fa8274404ff6ec4a4e7652a3bd5bcb37
#
# See io.opentracing.contrib.spring.cloud.jdbc.JdbcAutoConfiguration
opentracing.spring.cloud.jdbc.enabled=false


# app.datasource.jdbcUrl=jdbc:h2:mem:ecommercedb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false;MODE=PostgreSQL
# app.datasource.username=sa
# app.datasource.password=

# spring.jpa.show-sql=true

database=postgresql
spring.datasource.url=jdbc:tracing:postgresql://localhost:5432/test
spring.datasource.username=test
spring.datasource.password=test
spring.datasource.driverClassName=io.opentracing.contrib.jdbc.TracingDriver

# validate: validate the schema, makes no changes to the database.
# update: update the schema.
# create: creates the schema, destroying previous data.
# create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped.
# none: does nothing with the schema, makes no changes to the database
spring.jpa.hibernate.ddl-auto=update

antiFraudService.baseUrl=http://localhost:8081

management.endpoints.web.exposure.include=*,jolokia

server.tomcat.accesslog.enabled= true

logging.file.name=/usr/local/var/log/my-shopping-cart/frontend.log
